// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MovieListType {
  FAVORITE
  HM
  QUEUE
}

enum TokenType {
  AUTH
}

model User {
  id                 Int            @id @default(autoincrement())
  username           String         @unique
  hashed_password    String
  slack_user_id      String?
  tokens             Token[]
  lists              ListsOnUser[]
}

model List {
  id          Int               @id @default(autoincrement())
  type        MovieListType
  movies      MoviesOnList[]
  users       ListsOnUser[]
}

model MoviesOnList {
  movie      Movie     @relation(fields: [movie_id], references: [id])
  movie_id   Int
  list       List      @relation(fields: [list_id], references: [id])
  list_id    Int
  order      Int

  @@id(name: "movie_list_id", fields: [movie_id, list_id])
}

model ListsOnUser {
  list       List    @relation(fields: [list_id], references: [id])
  list_id    Int
  user       User    @relation(fields: [user_id], references: [id])
  user_id    Int

  @@id(name: "list_user_id", fields: [list_id, user_id])
}

model Token {
  id           String      @id @default(uuid())
  created_at   DateTime    @default(now())
  user         User        @relation(fields: [user_id], references: [id])
  user_id      Int
  type         TokenType   @default(AUTH)
}

model Movie {
  id              Int             @id
  created_at      DateTime        @default(now())
  title           String
  release_date    DateTime        @db.Date
  poster_path     String?
  lists           MoviesOnList[]
}

